#!/usr/bin/env python3
"""
–î–µ–º–æ-–∑–±–∏—Ä–∞—á –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É
–°—Ç–≤–æ—Ä—é—î –ø—Ä–∏–∫–ª–∞–¥–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø–æ–≤–∏—Ö –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
"""

import json
import os
from datetime import datetime, timedelta
import random

def generate_sample_comments():
    """–ì–µ–Ω–µ—Ä—É—î —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É"""
    
    # –®–∞–±–ª–æ–Ω–∏ –≤—ñ–¥–≥—É–∫—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ä–µ–∞–ª—å–Ω–∏—Ö –ø–∞—Ç–µ—Ä–Ω—ñ–≤
    testimonial_templates = [
        {
            'text': '–î—è–∫—É—é –∑–∞ {topic}! –ó–∞–≤–¥—è–∫–∏ –≤–∞—à–∏–º –ø–æ—Ä–∞–¥–∞–º —è {achievement}. –¶–µ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∞—Ü—é—î! üèçÔ∏è',
            'topics': ['—É—Ä–æ–∫ –ø—Ä–æ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è', '–≤—ñ–¥–µ–æ –ø—Ä–æ –ø–æ–≤–æ—Ä–æ—Ç–∏', '–ø–æ—Ä–∞–¥–∏ —â–æ–¥–æ –±–µ–∑–ø–µ–∫–∏', '–º–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å'],
            'achievements': ['—É–Ω–∏–∫–Ω—É–≤ –∞–≤–∞—Ä—ñ—ó –º–∏–Ω—É–ª–æ–≥–æ —Ç–∏–∂–Ω—è', '–ø–æ—á—É–≤–∞—é—Å—è –≤–ø–µ–≤–Ω–µ–Ω—ñ—à–µ –Ω–∞ –¥–æ—Ä–æ–∑—ñ', 
                           '–Ω–∞–≤—á–∏–≤—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—Ö–æ–¥–∏—Ç–∏ –≤ –ø–æ–≤–æ—Ä–æ—Ç–∏', '–ø–æ–¥–æ–ª–∞–≤ —Å—Ç—Ä–∞—Ö —à–≤–∏–¥–∫–æ—Å—Ç—ñ']
        },
        {
            'text': '–ù–∞–π–∫—Ä–∞—â–∏–π –∫–∞–Ω–∞–ª –ø—Ä–æ –º–æ—Ç–æ–±–µ–∑–ø–µ–∫—É! {detail} –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å—ñ–º {audience} üëç',
            'details': ['–í—Å–µ –ø–æ—è—Å–Ω—é—î—Ç–µ –ø—Ä–æ—Å—Ç–æ—é –º–æ–≤–æ—é', '–ü–æ–∫–∞–∑—É—î—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏—Ö –ø—Ä–∏–∫–ª–∞–¥–∞—Ö',
                       '–î–∞—î—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏', '–í–∞—à—ñ —É—Ä–æ–∫–∏ –≤—Ä—è—Ç—É–≤–∞–ª–∏ –º–µ–Ω—ñ –∂–∏—Ç—Ç—è'],
            'audiences': ['–ø–æ—á–∞—Ç–∫—ñ–≤—Ü—è–º', '–º–æ—Ç–æ—Ü–∏–∫–ª—ñ—Å—Ç–∞–º', '—Ö—Ç–æ —Ö–æ—á–µ —ó–∑–¥–∏—Ç–∏ –±–µ–∑–ø–µ—á–Ω–æ', '—Å–≤–æ—ó–º –¥—Ä—É–∑—è–º']
        },
        {
            'text': '{timeframe} –¥–∏–≤–ª—é—Å—è –≤–∞—à –∫–∞–Ω–∞–ª —ñ {result}. {emotion}!',
            'timeframes': ['–í–∂–µ 3 –º—ñ—Å—è—Ü—ñ', '–ü—ñ–≤—Ä–æ–∫—É —Ç–æ–º—É –ø–æ—á–∞–≤', '–ó –º–∏–Ω—É–ª–æ–≥–æ —Ä–æ–∫—É', '–ö—ñ–ª—å–∫–∞ —Ç–∏–∂–Ω—ñ–≤'],
            'results': ['–º–æ—è —Ç–µ—Ö–Ω—ñ–∫–∞ –∑–Ω–∞—á–Ω–æ –ø–æ–∫—Ä–∞—â–∏–ª–∞—Å—å', '–ø–µ—Ä–µ—Å—Ç–∞–≤ –±–æ—è—Ç–∏—Å—è —Å–∫–ª–∞–¥–Ω–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ–π',
                       '–Ω–∞–≤—á–∏–≤—Å—è –ø–µ—Ä–µ–¥–±–∞—á–∞—Ç–∏ –Ω–µ–±–µ–∑–ø–µ–∫—É', '—Å—Ç–∞–≤ –¥–æ—Å–≤—ñ–¥—á–µ–Ω—ñ—à–∏–º –≤–æ–¥—ñ—î–º'],
            'emotions': ['–î—É–∂–µ –≤–¥—è—á–Ω–∏–π', '–¶–µ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ', '–©–∏—Ä–æ –¥—è–∫—É—é', '–í–∏ –º–æ–ª–æ–¥–µ—Ü—å']
        },
        {
            'text': '–ü—ñ—Å–ª—è –≤–∞—à–æ–≥–æ –≤—ñ–¥–µ–æ –ø—Ä–æ {topic} —è –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ {realization}. –¢–µ–ø–µ—Ä {action} üí™',
            'topics': ['–∫–æ–Ω—Ç—Ä–∞–≤–∞—Ä—ñ–π–Ω–µ –≤–æ–¥—ñ–Ω–Ω—è', '–ø—Ä–∞–≤–∏–ª—å–Ω—É –ø–æ—Å–∞–¥–∫—É', '–≤–∏–±—ñ—Ä –µ–∫—ñ–ø—ñ—Ä–æ–≤–∫–∏', '–ø–æ–≥–æ–¥–Ω—ñ —É–º–æ–≤–∏'],
            'realizations': ['—Ä–æ–±–∏–≤ –±–∞–≥–∞—Ç–æ –ø–æ–º–∏–ª–æ–∫', '–Ω–µ–¥–æ–æ—Ü—ñ–Ω—é–≤–∞–≤ –≤–∞–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–∞–≤—á–∞–Ω–Ω—è',
                           '–ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Å—Ç—ñ–π–Ω–æ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é–≤–∞—Ç–∏—Å—å', '–±–µ–∑–ø–µ–∫–∞ - —Ü–µ ‚Ññ1'],
            'actions': ['–∑–∞–≤–∂–¥–∏ –¥–æ—Ç—Ä–∏–º—É—é—Å—å –≤–∞—à–∏—Ö –ø–æ—Ä–∞–¥', '–ø—Ä–∞–∫—Ç–∏–∫—É—é –∫–æ–∂–µ–Ω –¥–µ–Ω—å',
                       '–¥—ñ–ª—é—Å—è –∑–Ω–∞–Ω–Ω—è–º–∏ –∑ –¥—Ä—É–∑—è–º–∏', '—ó–∂–¥–∂—É –Ω–∞–±–∞–≥–∞—Ç–æ –±–µ–∑–ø–µ—á–Ω—ñ—à–µ']
        }
    ]
    
    # –Ü–º–µ–Ω–∞ –∫–æ–º–µ–Ω—Ç–∞—Ç–æ—Ä—ñ–≤
    names = [
        '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ú.', '–ú–∞—Ä—ñ—è –ö.', '–ü–µ—Ç—Ä–æ –í.', '–ê–Ω–Ω–∞ –°.', '–Ü–≤–∞–Ω –ü.',
        '–û–∫—Å–∞–Ω–∞ –î.', '–ú–∏—Ö–∞–π–ª–æ –ë.', '–Æ–ª—ñ—è –¢.', '–ê–Ω–¥—Ä—ñ–π –õ.', '–ù–∞—Ç–∞–ª—ñ—è –†.',
        '–í—ñ–∫—Ç–æ—Ä –ß.', '–°–≤—ñ—Ç–ª–∞–Ω–∞ –ì.', '–î–º–∏—Ç—Ä–æ –ö.', '–¢–µ—Ç—è–Ω–∞ –ú.', '–°–µ—Ä–≥—ñ–π –û.'
    ]
    
    # –ù–∞–∑–≤–∏ –≤—ñ–¥–µ–æ (–Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø–æ–≤–∏—Ö —Ç–µ–º)
    video_titles = [
        '–ü—Ä–∞–≤–∏–ª—å–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª—ñ - –ø–æ–≤–Ω–∏–π –∫—É—Ä—Å',
        '–ö–æ–Ω—Ç—Ä–∞–≤–∞—Ä—ñ–π–Ω–µ –≤–æ–¥—ñ–Ω–Ω—è: 8 –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –±–µ–∑–ø–µ–∫–∏',
        '–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—Ö–æ–¥–∏—Ç–∏ –≤ –ø–æ–≤–æ—Ä–æ—Ç–∏ –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª—ñ',
        '–ü–æ–º–∏–ª–∫–∏ –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤, —è–∫—ñ –º–æ–∂—É—Ç—å –∫–æ—à—Ç—É–≤–∞—Ç–∏ –∂–∏—Ç—Ç—è',
        '–ï–∫—Å—Ç—Ä–µ–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è: –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏',
        '–á–∑–¥–∞ –≤ –¥–æ—â: —Ç–µ—Ö–Ω—ñ–∫–∞ –±–µ–∑–ø–µ–∫–∏ —Ç–∞ –ø–æ—Ä–∞–¥–∏',
        '–ü—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–æ—Å–∞–¥–∫–∞ –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª—ñ',
        '–Ø–∫ –æ–±–∏—Ä–∞—Ç–∏ –ø–µ—Ä—à—É –µ–∫—ñ–ø—ñ—Ä–æ–≤–∫—É',
        '–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤–æ–¥—ñ–Ω–Ω—è',
        '–û–≥–ª—è–¥ –Ω–∞–π—á–∞—Å—Ç—ñ—à–∏—Ö –ø—Ä–∏—á–∏–Ω –î–¢–ü –∑ –º–æ—Ç–æ—Ü–∏–∫–ª—ñ—Å—Ç–∞–º–∏'
    ]
    
    comments = []
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ 50+ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
    for i in range(60):
        template = random.choice(testimonial_templates)
        
        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        if 'topics' in template:
            text = template['text'].format(
                topic=random.choice(template['topics']),
                achievement=random.choice(template.get('achievements', [''])),
                detail=random.choice(template.get('details', [''])),
                audience=random.choice(template.get('audiences', [''])),
                timeframe=random.choice(template.get('timeframes', [''])),
                result=random.choice(template.get('results', [''])),
                emotion=random.choice(template.get('emotions', [''])),
                realization=random.choice(template.get('realizations', [''])),
                action=random.choice(template.get('actions', ['']))
            )
        else:
            text = template['text']
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä
        comment = {
            'author': random.choice(names),
            'text': text,
            'video_title': random.choice(video_titles),
            'video_url': f'https://www.youtube.com/watch?v=example_{i}',
            'date': (datetime.now() - timedelta(days=random.randint(1, 180))).strftime('%Y-%m-%d'),
            'likes': random.randint(5, 150),
            'marketing_category': 'testimonial' if i < 20 else 'positive_feedback' if i < 40 else 'success_story'
        }
        
        comments.append(comment)
    
    # –î–æ–¥–∞—î–º–æ –∫—ñ–ª—å–∫–∞ –æ—Å–æ–±–ª–∏–≤–æ –ø–æ—Ç—É–∂–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
    power_testimonials = [
        {
            'author': '–í–æ–ª–æ–¥–∏–º–∏—Ä –ö.',
            'text': '–í–∞—à—ñ —É—Ä–æ–∫–∏ –≤—Ä—è—Ç—É–≤–∞–ª–∏ –º–µ–Ω—ñ –∂–∏—Ç—Ç—è! –ú—ñ—Å—è—Ü—å —Ç–æ–º—É –ø–æ—Ç—Ä–∞–ø–∏–≤ —É –∫—Ä–∏—Ç–∏—á–Ω—É —Å–∏—Ç—É–∞—Ü—ñ—é - –≤–∞–Ω—Ç–∞–∂—ñ–≤–∫–∞ —Ä—ñ–∑–∫–æ –ø–æ–≤–µ—Ä–Ω—É–ª–∞ –ø–µ—Ä–µ–¥—ñ –º–Ω–æ—é. –ó–∞–≤–¥—è–∫–∏ –≤–∞—à—ñ–π —Ç–µ—Ö–Ω—ñ—Ü—ñ –µ–∫—Å—Ç—Ä–µ–Ω–æ–≥–æ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è –∑–º—ñ–≥ –∑—É–ø–∏–Ω–∏—Ç–∏—Å—å –∑–∞ –º–µ—Ç—Ä –¥–æ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è. –î—Ä—É–∂–∏–Ω–∞ –ø–ª–∞–∫–∞–ª–∞ –≤—ñ–¥ —â–∞—Å—Ç—è, –∫–æ–ª–∏ —è –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ–¥–æ–º—É. –î—è–∫—É—é –≤–∞–º –∑–∞ —Ç–µ, —â–æ —Ä–æ–±–∏—Ç–µ! üôè',
            'video_title': '–ï–∫—Å—Ç—Ä–µ–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è: –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏',
            'date': '2024-01-28',
            'likes': 342
        },
        {
            'author': '–ö–∞—Ç–µ—Ä–∏–Ω–∞ –ü.',
            'text': '–ü—ñ—Å–ª—è 10 —Ä–æ–∫—ñ–≤ –≤–æ–¥—ñ–Ω–Ω—è –∞–≤—Ç–æ –ø–µ—Ä–µ–π—à–ª–∞ –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª. –ë—É–ª–æ —Å—Ç—Ä–∞—à–Ω–æ! –ê–ª–µ –≤–∞—à —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –¥–æ–ø–æ–º—ñ–≥ –ø–æ–¥–æ–ª–∞—Ç–∏ –≤—Å—ñ —Å—Ç—Ä–∞—Ö–∏. –ó–∞ 3 –º—ñ—Å—è—Ü—ñ –ø—Ä–æ–π—à–ª–∞ –≤—ñ–¥ –ø–æ–≤–Ω–æ–≥–æ –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—è –¥–æ –≤–ø–µ–≤–Ω–µ–Ω–æ–≥–æ –≤–æ–¥—ñ—è. –í—á–æ—Ä–∞ –ø—Ä–æ—ó—Ö–∞–ª–∞ 500 –∫–º –ø–æ –ö–∞—Ä–ø–∞—Ç–∞—Ö - —Ü–µ –±—É–ª–æ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ! –î—è–∫—É—é –∑–∞ –≤–∞—à—É –ø—Ä–∞—Ü—é! ‚ù§Ô∏èüèçÔ∏è',
            'video_title': '–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤–æ–¥—ñ–Ω–Ω—è',
            'date': '2024-02-10',
            'likes': 256
        },
        {
            'author': '–ú–∞–∫—Å–∏–º –î.',
            'text': '–†—ñ–∫ —Ç–æ–º—É —Ä–æ–∑–±–∏–≤—Å—è —á–µ—Ä–µ–∑ —Å–≤–æ—é —Å–∞–º–æ–≤–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å. –ü—ñ—Å–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ—è–≤—Å—è —Å—ñ–¥–∞—Ç–∏ –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª. –í–∞—à—ñ –≤—ñ–¥–µ–æ –¥–æ–ø–æ–º–æ–≥–ª–∏ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –º–æ—ó –ø–æ–º–∏–ª–∫–∏ —ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å. –¢–µ–ø–µ—Ä —ó–∂–¥–∂—É –∑ –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –ø—Ä–∞–≤–∏–ª –±–µ–∑–ø–µ–∫–∏. –ù–∞–≤—á–∞—é —ñ–Ω—à–∏—Ö —Ç–æ–º—É, —á–æ–≥–æ –Ω–∞–≤—á–∏–≤—Å—è —É –≤–∞—Å. –í–∏ —Ä–æ–±–∏—Ç–µ —Å–≤—ñ—Ç –±–µ–∑–ø–µ—á–Ω—ñ—à–∏–º!',
            'video_title': '–ö–æ–Ω—Ç—Ä–∞–≤–∞—Ä—ñ–π–Ω–µ –≤–æ–¥—ñ–Ω–Ω—è: 8 –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –±–µ–∑–ø–µ–∫–∏',
            'date': '2024-01-15',
            'likes': 489
        }
    ]
    
    for pt in power_testimonials:
        pt['marketing_category'] = 'power_testimonial'
        comments.append(pt)
    
    return sorted(comments, key=lambda x: x['likes'], reverse=True)

def save_marketing_data(comments):
    """–ó–±–µ—Ä—ñ–≥–∞—î –¥–∞–Ω—ñ –≤ —Ä—ñ–∑–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É"""
    
    output_dir = "/Users/chyngys/scripts/neb-content-appv2/marketing_data"
    os.makedirs(output_dir, exist_ok=True)
    
    # 1. JSON –∑ —É—Å—ñ–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏
    all_comments_file = os.path.join(output_dir, "sample_youtube_comments.json")
    with open(all_comments_file, 'w', encoding='utf-8') as f:
        json.dump({
            'generated_at': datetime.now().isoformat(),
            'total_comments': len(comments),
            'comments': comments
        }, f, ensure_ascii=False, indent=2)
    
    # 2. –¢–æ–ø-20 –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
    top_comments_file = os.path.join(output_dir, "top_20_testimonials.json")
    with open(top_comments_file, 'w', encoding='utf-8') as f:
        json.dump({
            'generated_at': datetime.now().isoformat(),
            'comments': comments[:20]
        }, f, ensure_ascii=False, indent=2)
    
    # 3. Markdown –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π
    markdown_file = os.path.join(output_dir, "testimonials_for_marketing.md")
    with open(markdown_file, 'w', encoding='utf-8') as f:
        f.write("# –í—ñ–¥–≥—É–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ YouTube –∫–∞–Ω–∞–ª—É\n\n")
        f.write("## üåü –ù–∞–π–∫—Ä–∞—â—ñ –≤—ñ–¥–≥—É–∫–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É\n\n")
        
        categories = {
            'power_testimonial': 'üí• –ü–æ—Ç—É–∂–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó',
            'testimonial': 'üëç –í—ñ–¥–≥—É–∫–∏-–ø–æ–¥—è–∫–∏',
            'positive_feedback': '‚ú® –ü–æ–∑–∏—Ç–∏–≤–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ',
            'success_story': 'üéØ –Ü—Å—Ç–æ—Ä—ñ—ó —É—Å–ø—ñ—Ö—É'
        }
        
        for category, title in categories.items():
            category_comments = [c for c in comments if c.get('marketing_category') == category][:5]
            if category_comments:
                f.write(f"### {title}\n\n")
                for comment in category_comments:
                    f.write(f"**{comment['author']}** *(üëç {comment['likes']})*\n")
                    f.write(f"*–ü—ñ–¥ –≤—ñ–¥–µ–æ: {comment['video_title']}*\n\n")
                    f.write(f"> {comment['text']}\n\n")
                    f.write("---\n\n")
    
    # 4. CSV –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
    csv_file = os.path.join(output_dir, "comments_analytics.csv")
    with open(csv_file, 'w', encoding='utf-8') as f:
        f.write("–ê–≤—Ç–æ—Ä,–î–∞—Ç–∞,–õ–∞–π–∫–∏,–ö–∞—Ç–µ–≥–æ—Ä—ñ—è,–í—ñ–¥–µ–æ,–¢–µ–∫—Å—Ç\n")
        for c in comments:
            text = c['text'].replace('"', '""').replace('\n', ' ')
            f.write(f'"{c["author"]}","{c["date"]}",{c["likes"]},"{c.get("marketing_category", "other")}","{c["video_title"]}","{text}"\n')
    
    print(f"‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ {len(comments)} –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤")
    print(f"üìÅ –§–∞–π–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: {output_dir}")
    print(f"   ‚Ä¢ {all_comments_file}")
    print(f"   ‚Ä¢ {top_comments_file}")
    print(f"   ‚Ä¢ {markdown_file}")
    print(f"   ‚Ä¢ {csv_file}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –ü–æ—Ç—É–∂–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ–π: {len([c for c in comments if c.get('marketing_category') == 'power_testimonial'])}")
    print(f"   ‚Ä¢ –í—ñ–¥–≥—É–∫—ñ–≤-–ø–æ–¥—è–∫: {len([c for c in comments if c.get('marketing_category') == 'testimonial'])}")
    print(f"   ‚Ä¢ –ü–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: {len([c for c in comments if c.get('marketing_category') == 'positive_feedback'])}")
    print(f"   ‚Ä¢ –Ü—Å—Ç–æ—Ä—ñ–π —É—Å–ø—ñ—Ö—É: {len([c for c in comments if c.get('marketing_category') == 'success_story'])}")

def main():
    print("üöÄ –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É...")
    comments = generate_sample_comments()
    save_marketing_data(comments)
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤.")

if __name__ == "__main__":
    main()