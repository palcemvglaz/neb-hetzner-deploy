'use client'

import { useState } from 'react'
import Link from 'next/link'

const questions = [
  {
    id: 1,
    question: "–¢–∏ —ó–¥–µ—à 50 –∫–º/–≥–æ–¥ –º—ñ—Å—Ç–æ–º. –ü–æ–ø–µ—Ä–µ–¥—É —Ñ—É—Ä–≥–æ–Ω –∑–∞–∫—Ä–∏–≤–∞—î –æ–≥–ª—è–¥ –ø—Ä–∞–≤–æ—Ä—É—á. –©–æ —Ä–æ–±–∏—à?",
    options: [
      "–ü—Ä–æ–¥–æ–≤–∂—É—é —ó—Ö–∞—Ç–∏ –∑ —Ç—ñ—î—é –∂ —à–≤–∏–¥–∫—ñ—Å—Ç—é",
      "–ó–º—ñ—â—É—é—Å—å –ª—ñ–≤–æ—Ä—É—á —ñ –∑–Ω–∏–∂—É—é —à–≤–∏–¥–∫—ñ—Å—Ç—å", 
      "–û–±–≥–∞–Ω—è—é —Ñ—É—Ä–≥–æ–Ω",
      "–°–∏–≥–Ω–∞–ª—é —â–æ–± –≤—Å—ñ –∑–Ω–∞–ª–∏ –¥–µ —è"
    ],
    correct: 1,
    explanation: "–§—É—Ä–≥–æ–Ω - —Ü–µ '–±–ª–æ–∫–µ—Ä'. –ó–∞ –Ω–∏–º –º–æ–∂–µ –≤–∏–ª–µ—Ç—ñ—Ç–∏ –∞–≤—Ç–æ. –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–º—ñ—Å—Ç–∏—Å—è –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –æ–≥–ª—è–¥—É —ñ –±—É—Ç–∏ –≥–æ—Ç–æ–≤–∏–º –¥–æ –µ–∫—Å—Ç—Ä–µ–Ω–æ–≥–æ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è."
  },
  {
    id: 2,
    question: "–ù–∞ –ø–µ—Ä–µ—Ö—Ä–µ—Å—Ç—ñ –≥–æ—Ä–∏—Ç—å –∑–µ–ª–µ–Ω–µ. –ê–≤—Ç–æ –ª—ñ–≤–æ—Ä—É—á —á–µ–∫–∞—î –Ω–∞ –ø–æ–≤–æ—Ä–æ—Ç. –¢–≤–æ—ó –¥—ñ—ó?",
    options: [
      "–á–¥—É - —É –º–µ–Ω–µ –∂ –∑–µ–ª–µ–Ω–µ —Å–≤—ñ—Ç–ª–æ",
      "–ü—Ä–∏—Å–∫–æ—Ä—é—é—Å—å —â–æ–± —à–≤–∏–¥—à–µ –ø—Ä–æ—ó—Ö–∞—Ç–∏",
      "–ì–æ—Ç—É—é —Ä—É–∫—É –Ω–∞ –≥–∞–ª—å–º—ñ, –¥–∏–≤–ª—é—Å—å –Ω–∞ –∫–æ–ª–µ—Å–∞ –∞–≤—Ç–æ",
      "–ó—É–ø–∏–Ω—è—é—Å—å —ñ –ø—Ä–æ–ø—É—Å–∫–∞—é"
    ],
    correct: 2,
    explanation: "–ö–ª–∞—Å–∏—á–Ω–∞ –∞–≤–∞—Ä—ñ—è '–ª—ñ–≤–∏–π –ø–æ–≤–æ—Ä–æ—Ç'. –í–æ–¥—ñ–π –º–æ–∂–µ –Ω–µ –±–∞—á–∏—Ç–∏ —Ç–µ–±–µ. –î–∏–≤–∏—Å—å –Ω–∞ –ø–µ—Ä–µ–¥–Ω—ñ –∫–æ–ª–µ—Å–∞ - –≤–æ–Ω–∏ –ø–µ—Ä—à–∏–º–∏ –ø–æ–∫–∞–∂—É—Ç—å –ø–æ—á–∞—Ç–æ–∫ —Ä—É—Ö—É."
  },
  {
    id: 3,
    question: "–ü—ñ—Å–ª—è –¥–æ—â—É –¥–æ—Ä–æ–≥–∞ –º–æ–∫—Ä–∞. –Ø–∫ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≥–∞–ª—å–º—ñ–≤–Ω–∏–π —à–ª—è—Ö?",
    options: [
      "–ù–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è —è–∫—â–æ –≥—É–º–∞ —Ö–æ—Ä–æ—à–∞",
      "–ó–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ 20-30%",
      "–ó–±—ñ–ª—å—à—É—î—Ç—å—Å—è –≤ 2-3 —Ä–∞–∑–∏",
      "–¢—Ä–æ—Ö–∏ –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è"
    ],
    correct: 2,
    explanation: "–ù–∞ –º–æ–∫—Ä—ñ–π –¥–æ—Ä–æ–∑—ñ –≥–∞–ª—å–º—ñ–≤–Ω–∏–π —à–ª—è—Ö –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –º—ñ–Ω—ñ–º—É–º –≤–¥–≤—ñ—á—ñ. –ê —è–∫—â–æ —î –∫–∞–ª—é–∂—ñ –∞–±–æ –º–∞—Å–ª—è–Ω—ñ –ø–ª—è–º–∏ - —â–µ –±—ñ–ª—å—à–µ."
  },
  {
    id: 4,
    question: "–°–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏ –µ–∫—Å—Ç—Ä–µ–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è?",
    options: [
      "–í–∑–∞–≥–∞–ª—ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —Ü–µ –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ",
      "–†–∞–∑ –Ω–∞ –º—ñ—Å—è—Ü—å –¥–æ—Å—Ç–∞—Ç–Ω—å–æ",
      "–ö–æ–∂–µ–Ω –¥–µ–Ω—å —Ö–æ—á–∞ –± 5-10 —Ä–∞–∑—ñ–≤",
      "–ö–æ–ª–∏ –±—É–¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ - —Ç–æ–¥—ñ –π —Å–ø—Ä–∞—Ü—é—î"
    ],
    correct: 2,
    explanation: "–ï–∫—Å—Ç—Ä–µ–Ω–µ –≥–∞–ª—å–º—É–≤–∞–Ω–Ω—è - —Ü–µ –º'—è–∑–æ–≤–∞ –ø–∞–º'—è—Ç—å. –ë–µ–∑ —â–æ–¥–µ–Ω–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –≤ –∫—Ä–∏—Ç–∏—á–Ω—ñ–π —Å–∏—Ç—É–∞—Ü—ñ—ó —Ç–∏ –∞–±–æ –ø–µ—Ä–µ–≥–∞–ª—å–º—É—î—à, –∞–±–æ –Ω–µ–¥–æ–≥–∞–ª—å–º—É—î—à."
  },
  {
    id: 5,
    question: "–í–æ–¥—ñ–π –¥–∏–≤–∏—Ç—å—Å—è –ø—Ä—è–º–æ –Ω–∞ —Ç–µ–±–µ –Ω–∞ –ø–µ—Ä–µ—Ö—Ä–µ—Å—Ç—ñ. –¶–µ –æ–∑–Ω–∞—á–∞—î —â–æ:",
    options: [
      "–í—ñ–Ω —Ç–µ–±–µ –±–∞—á–∏—Ç—å —ñ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
      "–í—ñ–Ω –ø–ª–∞–Ω—É—î –ø–æ–≤–æ—Ä–æ—Ç",
      "–ù—ñ—á–æ–≥–æ –Ω–µ –æ–∑–Ω–∞—á–∞—î - –≤—ñ–Ω –º–æ–∂–µ —Ç–µ–±–µ –Ω–µ –ø–æ–º—ñ—Ç–∏—Ç–∏",
      "–ü–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ö–Ω—É—Ç–∏ —Ä—É–∫–æ—é"
    ],
    correct: 2,
    explanation: "–ü–æ–º–∏–ª–∫–∞ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è - –≤–æ–¥—ñ–π –º–æ–∂–µ –¥–∏–≤–∏—Ç–∏—Å—å –ù–ê —Ç–µ–±–µ –∞–ª–µ –Ω–µ –ë–ê–ß–ò–¢–ò —Ç–µ–±–µ. –ú–æ–∑–æ–∫ —á–∞—Å—Ç–æ '—Ñ—ñ–ª—å—Ç—Ä—É—î' –º–æ—Ç–æ—Ü–∏–∫–ª—ñ—Å—Ç—ñ–≤."
  }
]

export default function TestSkillPage() {
  const [currentQuestion, setCurrentQuestion] = useState(0)
  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null)
  const [showResult, setShowResult] = useState(false)
  const [score, setScore] = useState(0)
  const [answers, setAnswers] = useState<boolean[]>([])

  const handleAnswer = (optionIndex: number) => {
    const isCorrect = optionIndex === questions[currentQuestion].correct
    setSelectedAnswer(optionIndex)
    setAnswers([...answers, isCorrect])
    if (isCorrect) setScore(score + 1)
  }

  const nextQuestion = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1)
      setSelectedAnswer(null)
    } else {
      setShowResult(true)
    }
  }

  const resetTest = () => {
    setCurrentQuestion(0)
    setSelectedAnswer(null)
    setShowResult(false)
    setScore(0)
    setAnswers([])
  }

  if (showResult) {
    const percentage = (score / questions.length) * 100
    const survived = percentage >= 80

    return (
      <div className="min-h-screen bg-black text-white flex items-center justify-center p-4">
        <div className="max-w-2xl w-full bg-gray-900 rounded-lg p-8">
          <h1 className="text-4xl font-black mb-6 text-center">
            –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É
          </h1>
          
          <div className="text-center mb-8">
            <div className={`text-6xl font-black mb-4 ${survived ? 'text-green-500' : 'text-red-500'}`}>
              {score}/{questions.length}
            </div>
            <p className="text-2xl font-bold mb-2">
              {survived ? 'üéâ –Ñ —à–∞–Ω—Å–∏ –≤–∏–∂–∏—Ç–∏!' : 'üíÄ –í–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫ –∞–≤–∞—Ä—ñ—ó'}
            </p>
            <p className="text-gray-400">
              {survived 
                ? '–ê–ª–µ —Ü–µ –ª–∏—à–µ –±–∞–∑–æ–≤—ñ –∑–Ω–∞–Ω–Ω—è. –ü–æ–≤–Ω–∏–π –∫—É—Ä—Å –¥–∞—Å—Ç—å –Ω–∞–±–∞–≥–∞—Ç–æ –±—ñ–ª—å—à–µ.'
                : '–¢–æ–±—ñ –∫—Ä–∏—Ç–∏—á–Ω–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∑–Ω–∞–Ω–Ω—è –∑ –∫—É—Ä—Å—É –ù–µ–±–∞—á–∏–≤. –ù–µ –≤—ñ–¥–∫–ª–∞–¥–∞–π!'
              }
            </p>
          </div>

          <div className="space-y-4 mb-8">
            <h3 className="text-xl font-bold">–¢–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:</h3>
            {questions.map((q, index) => (
              <div key={q.id} className={`p-4 rounded ${answers[index] ? 'bg-green-900/30' : 'bg-red-900/30'}`}>
                <p className="font-medium">{q.question}</p>
                <p className="text-sm text-gray-400 mt-2">{q.explanation}</p>
              </div>
            ))}
          </div>

          <div className="flex flex-col gap-4">
            <Link
              href="/register"
              className="w-full bg-yellow-400 hover:bg-yellow-300 text-black px-6 py-4 text-xl font-bold rounded-lg text-center transition-all"
            >
              üî• –ü—Ä–æ–π—Ç–∏ –ø–æ–≤–Ω–∏–π –∫—É—Ä—Å –∑—ñ –∑–Ω–∏–∂–∫–æ—é 40%
            </Link>
            <button
              onClick={resetTest}
              className="w-full bg-gray-700 hover:bg-gray-600 px-6 py-4 text-lg font-medium rounded-lg transition-all"
            >
              –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
            </button>
          </div>
        </div>
      </div>
    )
  }

  const question = questions[currentQuestion]

  return (
    <div className="min-h-screen bg-black text-white flex items-center justify-center p-4">
      <div className="max-w-2xl w-full bg-gray-900 rounded-lg p-8">
        <div className="mb-6">
          <div className="flex justify-between items-center mb-4">
            <h1 className="text-2xl font-bold">–¢–µ—Å—Ç –≤–∏–∂–∏–≤–∞–Ω–Ω—è –Ω–∞ –¥–æ—Ä–æ–∑—ñ</h1>
            <span className="text-gray-400">
              {currentQuestion + 1} / {questions.length}
            </span>
          </div>
          <div className="w-full bg-gray-800 rounded-full h-2">
            <div 
              className="bg-yellow-400 h-2 rounded-full transition-all"
              style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}
            />
          </div>
        </div>

        <div className="mb-8">
          <h2 className="text-xl font-medium mb-6">{question.question}</h2>
          
          <div className="space-y-3">
            {question.options.map((option, index) => (
              <button
                key={index}
                onClick={() => handleAnswer(index)}
                disabled={selectedAnswer !== null}
                className={`w-full text-left p-4 rounded-lg transition-all ${
                  selectedAnswer === null 
                    ? 'bg-gray-800 hover:bg-gray-700' 
                    : selectedAnswer === index
                      ? index === question.correct
                        ? 'bg-green-700'
                        : 'bg-red-700'
                      : index === question.correct
                        ? 'bg-green-700'
                        : 'bg-gray-800'
                }`}
              >
                {option}
              </button>
            ))}
          </div>

          {selectedAnswer !== null && (
            <div className="mt-6 p-4 bg-gray-800 rounded-lg">
              <p className="text-yellow-400 font-medium mb-2">
                {selectedAnswer === question.correct ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!'}
              </p>
              <p className="text-gray-300">{question.explanation}</p>
            </div>
          )}
        </div>

        {selectedAnswer !== null && (
          <button
            onClick={nextQuestion}
            className="w-full bg-yellow-400 hover:bg-yellow-300 text-black px-6 py-3 text-lg font-bold rounded-lg transition-all"
          >
            {currentQuestion < questions.length - 1 ? '–ù–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è' : '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç'}
          </button>
        )}
      </div>
    </div>
  )
}